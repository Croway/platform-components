apiVersion: k8s.keycloak.org/v2alpha1
kind: KeycloakRealmImport
metadata:
  name: microcks
spec:
  keycloakCRName: keycloak
  realm:
    id: microcks
    realm: microcks
    displayName: Microcks
    notBefore: 0
    revokeRefreshToken: false
    refreshTokenMaxReuse: 0
    accessTokenLifespan: 300
    accessTokenLifespanForImplicitFlow: 900
    ssoSessionIdleTimeout: 1800
    ssoSessionMaxLifespan: 36000
    offlineSessionIdleTimeout: 2592000
    accessCodeLifespan: 60
    accessCodeLifespanUserAction: 300
    accessCodeLifespanLogin: 1800
    actionTokenGeneratedByAdminLifespan: 43200
    actionTokenGeneratedByUserLifespan: 300
    enabled: true
    sslRequired: external
    registrationAllowed: false
    registrationEmailAsUsername: false
    rememberMe: false
    verifyEmail: false
    loginWithEmailAllowed: true
    duplicateEmailsAllowed: false
    resetPasswordAllowed: false
    editUsernameAllowed: false
    bruteForceProtected: false
    permanentLockout: false
    maxFailureWaitSeconds: 900
    minimumQuickLoginWaitSeconds: 60
    waitIncrementSeconds: 60
    quickLoginCheckMilliSeconds: 1000
    maxDeltaTimeSeconds: 43200
    failureFactor: 30
    users:
    - username: user
      enabled: true
      emailVerified: true
      firstName: user
      lastName: microcks
      email: microcks-user@redhat.com
      credentials:
      - type: password
        value: microcks123
      realmRoles: []
      applicationRoles:
        microcks-app:
        - user
    - username: manager
      enabled: true
      emailVerified: true
      firstName: manager
      lastName: microcks
      email: microcks-manager@redhat.com
      credentials:
      - type: password
        value: microcks123
      realmRoles: []
      applicationRoles:
        microcks-app:
        - user
        - manager
    - username: admin
      enabled: true
      emailVerified: true
      firstName: admin
      lastName: microcks
      email: microcks-admin@redhat.com
      credentials:
      - type: password
        value: microcks123
      realmRoles: []
      applicationRoles:
        realm-management:
        - manage-users
        - manage-clients
        account:
        - manage-account
        microcks-app:
        - user
        - manager
        - admin
    roles:
      realm: []
      client:
        microcks-app:
        - name: user
          composite: false
          clientRole: true
          containerId: microcks
        - name: admin
          composite: false
          clientRole: true
          containerId: microcks
        - name: manager
          composite: false
          clientRole: true
          containerId: microcks
    groups:
    - name: microcks
      path: "/microcks"
      attributes: {}
      realmRoles: []
      clientRoles: {}
      subGroups:
      - name: manager
        path: "/microcks/manager"
        attributes: {}
        realmRoles: []
        clientRoles: {}
        subGroups: []
    defaultRoles: []
    requiredCredentials:
    - password
    scopeMappings: []
    clientScopeMappings:
      microcks-app:
      - client: microcks-app-js
        roles:
        - manager
        - admin
        - user
      realm-management:
      - client: microcks-app-js
        roles:
        - manage-users
        - manage-clients
    clients:
    - clientId: microcks-app-js
      enabled: true
      publicClient: true
      redirectUris:
      - https://microcks-microcks.{{ .Values.clusterRouterDomain }}/*
      webOrigins:
      - "+"
      fullScopeAllowed: false
      protocolMappers:
      - name: microcks-group-mapper
        protocol: openid-connect
        protocolMapper: oidc-group-membership-mapper
        consentRequired: false
        config:
          full.path: 'true'
          id.token.claim: 'true'
          access.token.claim: 'true'
          claim.name: microcks-groups
          userinfo.token.claim: 'true'
    applications:
    - name: microcks-app
      enabled: true
      bearerOnly: true
      defaultRoles:
      - user
    - name: microcks-serviceaccount
      secret: ab54d329-e435-41ae-a900-ec6b3fe15c54
      enabled: true
      bearerOnly: false
      publicClient: false
      standardFlowEnabled: false
      directAccessGrantsEnabled: true
      serviceAccountsEnabled: true
      clientAuthenticatorType: client-secret
    identityProviders: []
    keycloakVersion: 10.0.1